// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GooglePlay.proto

package com.github.yeriomin.playstore.api;

/**
 * Protobuf type {@code SubscriptionTerms}
 */
public  final class SubscriptionTerms extends
    com.google.protobuf.GeneratedMessageLite<
        SubscriptionTerms, SubscriptionTerms.Builder> implements
    // @@protoc_insertion_point(message_implements:SubscriptionTerms)
    SubscriptionTermsOrBuilder {
  private SubscriptionTerms() {
  }
  private int bitField0_;
  public static final int RECURRINGPERIOD_FIELD_NUMBER = 1;
  private com.github.yeriomin.playstore.api.TimePeriod recurringPeriod_;
  /**
   * <code>optional .TimePeriod recurringPeriod = 1;</code>
   */
  public boolean hasRecurringPeriod() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional .TimePeriod recurringPeriod = 1;</code>
   */
  public com.github.yeriomin.playstore.api.TimePeriod getRecurringPeriod() {
    return recurringPeriod_ == null ? com.github.yeriomin.playstore.api.TimePeriod.getDefaultInstance() : recurringPeriod_;
  }
  /**
   * <code>optional .TimePeriod recurringPeriod = 1;</code>
   */
  private void setRecurringPeriod(com.github.yeriomin.playstore.api.TimePeriod value) {
    if (value == null) {
      throw new NullPointerException();
    }
    recurringPeriod_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <code>optional .TimePeriod recurringPeriod = 1;</code>
   */
  private void setRecurringPeriod(
      com.github.yeriomin.playstore.api.TimePeriod.Builder builderForValue) {
    recurringPeriod_ = builderForValue.build();
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>optional .TimePeriod recurringPeriod = 1;</code>
   */
  private void mergeRecurringPeriod(com.github.yeriomin.playstore.api.TimePeriod value) {
    if (recurringPeriod_ != null &&
        recurringPeriod_ != com.github.yeriomin.playstore.api.TimePeriod.getDefaultInstance()) {
      recurringPeriod_ =
        com.github.yeriomin.playstore.api.TimePeriod.newBuilder(recurringPeriod_).mergeFrom(value).buildPartial();
    } else {
      recurringPeriod_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>optional .TimePeriod recurringPeriod = 1;</code>
   */
  private void clearRecurringPeriod() {  recurringPeriod_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int TRIALPERIOD_FIELD_NUMBER = 2;
  private com.github.yeriomin.playstore.api.TimePeriod trialPeriod_;
  /**
   * <code>optional .TimePeriod trialPeriod = 2;</code>
   */
  public boolean hasTrialPeriod() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional .TimePeriod trialPeriod = 2;</code>
   */
  public com.github.yeriomin.playstore.api.TimePeriod getTrialPeriod() {
    return trialPeriod_ == null ? com.github.yeriomin.playstore.api.TimePeriod.getDefaultInstance() : trialPeriod_;
  }
  /**
   * <code>optional .TimePeriod trialPeriod = 2;</code>
   */
  private void setTrialPeriod(com.github.yeriomin.playstore.api.TimePeriod value) {
    if (value == null) {
      throw new NullPointerException();
    }
    trialPeriod_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <code>optional .TimePeriod trialPeriod = 2;</code>
   */
  private void setTrialPeriod(
      com.github.yeriomin.playstore.api.TimePeriod.Builder builderForValue) {
    trialPeriod_ = builderForValue.build();
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .TimePeriod trialPeriod = 2;</code>
   */
  private void mergeTrialPeriod(com.github.yeriomin.playstore.api.TimePeriod value) {
    if (trialPeriod_ != null &&
        trialPeriod_ != com.github.yeriomin.playstore.api.TimePeriod.getDefaultInstance()) {
      trialPeriod_ =
        com.github.yeriomin.playstore.api.TimePeriod.newBuilder(trialPeriod_).mergeFrom(value).buildPartial();
    } else {
      trialPeriod_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .TimePeriod trialPeriod = 2;</code>
   */
  private void clearTrialPeriod() {  trialPeriod_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, getRecurringPeriod());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(2, getTrialPeriod());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getRecurringPeriod());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTrialPeriod());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.github.yeriomin.playstore.api.SubscriptionTerms parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.yeriomin.playstore.api.SubscriptionTerms prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code SubscriptionTerms}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.github.yeriomin.playstore.api.SubscriptionTerms, Builder> implements
      // @@protoc_insertion_point(builder_implements:SubscriptionTerms)
      com.github.yeriomin.playstore.api.SubscriptionTermsOrBuilder {
    // Construct using com.github.yeriomin.playstoreapi.SubscriptionTerms.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional .TimePeriod recurringPeriod = 1;</code>
     */
    public boolean hasRecurringPeriod() {
      return instance.hasRecurringPeriod();
    }
    /**
     * <code>optional .TimePeriod recurringPeriod = 1;</code>
     */
    public com.github.yeriomin.playstore.api.TimePeriod getRecurringPeriod() {
      return instance.getRecurringPeriod();
    }
    /**
     * <code>optional .TimePeriod recurringPeriod = 1;</code>
     */
    public Builder setRecurringPeriod(com.github.yeriomin.playstore.api.TimePeriod value) {
      copyOnWrite();
      instance.setRecurringPeriod(value);
      return this;
      }
    /**
     * <code>optional .TimePeriod recurringPeriod = 1;</code>
     */
    public Builder setRecurringPeriod(
        com.github.yeriomin.playstore.api.TimePeriod.Builder builderForValue) {
      copyOnWrite();
      instance.setRecurringPeriod(builderForValue);
      return this;
    }
    /**
     * <code>optional .TimePeriod recurringPeriod = 1;</code>
     */
    public Builder mergeRecurringPeriod(com.github.yeriomin.playstore.api.TimePeriod value) {
      copyOnWrite();
      instance.mergeRecurringPeriod(value);
      return this;
    }
    /**
     * <code>optional .TimePeriod recurringPeriod = 1;</code>
     */
    public Builder clearRecurringPeriod() {  copyOnWrite();
      instance.clearRecurringPeriod();
      return this;
    }

    /**
     * <code>optional .TimePeriod trialPeriod = 2;</code>
     */
    public boolean hasTrialPeriod() {
      return instance.hasTrialPeriod();
    }
    /**
     * <code>optional .TimePeriod trialPeriod = 2;</code>
     */
    public com.github.yeriomin.playstore.api.TimePeriod getTrialPeriod() {
      return instance.getTrialPeriod();
    }
    /**
     * <code>optional .TimePeriod trialPeriod = 2;</code>
     */
    public Builder setTrialPeriod(com.github.yeriomin.playstore.api.TimePeriod value) {
      copyOnWrite();
      instance.setTrialPeriod(value);
      return this;
      }
    /**
     * <code>optional .TimePeriod trialPeriod = 2;</code>
     */
    public Builder setTrialPeriod(
        com.github.yeriomin.playstore.api.TimePeriod.Builder builderForValue) {
      copyOnWrite();
      instance.setTrialPeriod(builderForValue);
      return this;
    }
    /**
     * <code>optional .TimePeriod trialPeriod = 2;</code>
     */
    public Builder mergeTrialPeriod(com.github.yeriomin.playstore.api.TimePeriod value) {
      copyOnWrite();
      instance.mergeTrialPeriod(value);
      return this;
    }
    /**
     * <code>optional .TimePeriod trialPeriod = 2;</code>
     */
    public Builder clearTrialPeriod() {  copyOnWrite();
      instance.clearTrialPeriod();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:SubscriptionTerms)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.github.yeriomin.playstore.api.SubscriptionTerms();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.github.yeriomin.playstore.api.SubscriptionTerms other = (com.github.yeriomin.playstore.api.SubscriptionTerms) arg1;
        recurringPeriod_ = visitor.visitMessage(recurringPeriod_, other.recurringPeriod_);
        trialPeriod_ = visitor.visitMessage(trialPeriod_, other.trialPeriod_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.github.yeriomin.playstore.api.TimePeriod.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = recurringPeriod_.toBuilder();
                }
                recurringPeriod_ = input.readMessage(com.github.yeriomin.playstore.api.TimePeriod.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(recurringPeriod_);
                  recurringPeriod_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                com.github.yeriomin.playstore.api.TimePeriod.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = trialPeriod_.toBuilder();
                }
                trialPeriod_ = input.readMessage(com.github.yeriomin.playstore.api.TimePeriod.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(trialPeriod_);
                  trialPeriod_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.github.yeriomin.playstore.api.SubscriptionTerms.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:SubscriptionTerms)
  private static final com.github.yeriomin.playstore.api.SubscriptionTerms DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SubscriptionTerms();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.github.yeriomin.playstore.api.SubscriptionTerms getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SubscriptionTerms> PARSER;

  public static com.google.protobuf.Parser<SubscriptionTerms> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

